#pragma once
#include "stdafx.h"


enum MAINPAGES
{
	MAINPAGE_MAIN		= 0,
	MAINPAGE_USER		= 1,
	MAINPAGE_CHAR		= 2,
	MAINPAGE_GUILD		= 3,
	MAINPAGE_VEHICLE	= 4,
	MAINPAGE_PET		= 5,
	MAINPAGE_ITEMBANK	= 6,
	MAINPAGE_SIZE		= 7,
};

enum CHARPAGES
{
	CHARPAGE_MAIN		= 0,
	CHARPAGE_EDIT		= 1,
	CHARPAGE_PUTON		= 2,
	CHARPAGE_INVEN		= 3,
	CHARPAGE_SKILL		= 4,
	CHARPAGE_QUEST		= 5,
	CHARPAGE_VEHICLE	= 6,
	CHARPAGE_PET		= 7,
	CHARPAGE_SKILLSLOT	= 8,
	CHARPAGE_QUICKSLOT	= 9,
	CHARPAGE_COOLDOWN	= 10,
	CHARPAGE_SIZE		= 11,
};

enum USERPAGES
{
	USERPAGE_MAIN		= 0,
	USERPAGE_NEW		= 1,
	USERPAGE_EDIT		= 2,
	USERPAGE_BANK		= 3,
	USERPAGE_CHAR		= 4,
	USERPAGE_LOCKER		= 5,
	USERPAGE_SIZE		= 6,
};

enum GUIILDPAGES
{
	GUILDPAGE_MAIN		= 0,
	GUILDPAGE_EDIT		= 1,
	GUILDPAGE_LOCKER	= 2,
	GUILDPAGE_MEMBER	= 3,
	GUILDPAGE_IMAGE		= 4,
	GUILDPAGE_SIZE		= 5,
};

enum VEHICLEPAGES
{
	VEHICLEPAGE_MAIN	= 0,
	VEHICLEPAGE_EDIT	= 1,
	VEHICLEPAGE_INVEN	= 2,
	VEHICLEPAGE_SIZE	= 3,
};

enum PETPAGES
{
	PETPAGE_MAIN		= 0,
	PETPAGE_EDIT		= 1,
	PETPAGE_INVEN		= 2,
	PETPAGE_SKILL		= 3,
	PETPAGE_SKILLSLOT	= 4,
	PETPAGE_SIZE		= 5,
};

enum USER_TYPE
{
	USER_TYPE_NORMAL	= 0,
	USER_TYPE_STAFF		= 1,
	USER_TYPE_GM		= 2,
	USER_TYPE_SIZE		= 3,
};

enum SEARCHTYPE
{
	SEARCH_ALL		= 0,
	SEARCH_NUM		= 1,
	SEARCH_ID		= 2,
	SEARCH_GM		= 3,
	SEARCH_STAFF	= 4,
	SEARCH_ONLINE	= 5,
	SEARCH_SIZE		= 6
};

enum SEARCHSHOPTYPE
{
	SEARCHSHOP_NONE		= 0,
	SEARCHSHOP_NUM		= 1,
	SEARCHSHOP_MID		= 2,
	SEARCHSHOP_SID		= 3,
	SEARCHSHOP_NAME		= 4,
	SEARCHSHOP_SIZE		= 5,
};

enum SEARCHCHATYPE
{
	SEARCH_CHAALL		= 0,
	SEARCH_CHANUM		= 1,
	SEARCH_CHAUSERNUM	= 2,
	SEARCH_CHANAME		= 3,
	SEARCH_CHAONLINE	= 4,
	SEARCH_CHADELETED	= 5,
	SEARCH_CHASIZE		= 6
};

enum SEARCHITEMTYPE
{
	SEARCH_NONE		= 0,
	SEARCH_NAME		= 1,
	SEARCH_MID		= 2,
	SEARCH_SID		= 3,
	SEARCH_ITEMTYPE	= 4,
	SEARCH_SUITTYPE	= 5,
	SEARCH_ARMSTYPE	= 6,
	SEARCH_ITEMLVL	= 7,
	SEARCH_CLASSREQ	= 8,
	SEARCH_ITEMSIZE	= 9
};

enum SEARCHITEMFILTER
{
	SEARCH_FILTER_NONE		= 0,
	SEARCH_FILTER_POTS		= 1,
	SEARCH_FILTER_VEHICLE	= 2,
	SEARCH_FILTER_SIZE		= 3,
};

enum SEARCHSKILLTYPE
{
	SEARCHSKILL_ALL			= 0,
	SEARCHSKILL_MID			= 1,
	SEARCHSKILL_SID			= 2,
	SEARCHSKILL_NAME		= 3,
	SEARCHSKILL_BRAWLER		= 4,
	SEARCHSKILL_SWORDSMAN	= 5,
	SEARCHSKILL_ARCHER		= 6,
	SEARCHSKILL_SHAMMAN		= 7,
	SEARCHSKILL_EXTREME		= 8,
	SEARCHSKILL_GUNNER		= 9,
	SEARCHSKILL_ASSASSIN	= 10,
	SEARCHSKILL_SIZE		= 11,
};

enum SEARCHGUILDTYPE
{
	SEARCH_GUILDALL		= 0,
	SEARCH_GUILDNUM		= 1,
	SEARCH_GUILDNAME	= 2,
	SEARCH_MASTERNAME	= 3,
	SEARCH_GUILDSIZE	= 4
};

enum SEARCHVEHICLETYPE
{
	SEARCH_VEHICLEALL		= 0,
	SEARCH_VEHICLENUM		= 1,
	SEARCH_VEHICLEOWNERNAME	= 2,
	SEARCH_VEHICLEOWNERNUM	= 3,
	SEARCH_VEHICLEDELETED	= 4,
	SEARCH_VEHICLESIZE		= 5
};

enum SEARCHPETTYPE
{
	SEARCH_PETALL		= 0,
	SEARCH_PETNUM		= 1,
	SEARCH_PETOWNERNAME	= 2,
	SEARCH_PETOWNERNUM	= 3,
	SEARCH_PETDELETED	= 4,
	SEARCH_PETSIZE		= 5
};

enum SEARCHMAPTYPE
{
	SEARCH_MAP_ALL				= 0,
	SEARCH_MAP_MID				= 1,
	SEARCH_MAP_SID				= 2,
	SEARCH_MAP_FIELD			= 3,
	SEARCH_MAP_NAME				= 4,
	SEARCH_MAP_BATTLEZONE		= 5,
	SEARCH_MAP_PEACEZONE		= 6,
	SEARCH_MAP_COMMISSION		= 7,
	SEARCH_MAP_PKZONE			= 8,
	SEARCH_MAP_FREEPK			= 9,
	SEARCH_MAP_ITEMDROP			= 10,
	SEARCH_MAP_MOVE				= 11,
	SEARCH_MAP_RESTART			= 12,
	SEARCH_MAP_PETACTIVITY		= 13,
	SEARCH_MAP_DECREASEEXP		= 14,
	SEARCH_MAP_VEHICLE			= 15,
	SEARCH_MAP_CLUBBATTLEZONE	= 16,
	SEARCH_MAP_CDM				= 17,
	SEARCH_MAP_REDZONE			= 18,
	SEARCH_MAP_INSTANT			= 19,
	SEARCH_MAP_SIZE				= 20
};

enum EM_ITEMGEN
{
	GEN_DEFAULT		= 0,
	GEN_INIT		= 1,
	GEN_SHOP		= 2,
	GEN_NPC			= 3,
	GEN_QUEST		= 4,
	GEN_MOB			= 5,
	GEN_GMEDIT		= 6,
	GEN_OLD			= 7,
	GEN_BILLING		= 8,
	GEN_GMEDIT2		= 9,
	GEN_ITEMMIX		= 10,
	GEN_GATHERING	= 11,
	GEN_SYSTEM		= 12,
	GEN_ALL			= -1,
	GEN_SIZE		= 14,
};

enum EM_CLUBRANK
{
	CLUBRANK_0		= 0,
	CLUBRANK_1		= 1,
	CLUBRANK_2		= 2,
	CLUBRANK_3		= 3,
	CLUBRANK_4		= 4,
	CLUBRANK_5		= 5,
	CLUBRANK_6		= 6,
	CLUBRANK_7		= 7,
	CLUBRANK_8		= 8,
	CLUBRANK_9		= 9,
	CLUBRANK_SIZE	= 10,
};

enum EM_CLUBSTATUS
{
	CLUBSATUS_NORMAL	= 0,
	CLUBSATUS_EXPIRE	= 1,
	CLUBSATUS_SIZE		= 2,
};

enum EM_CHARSTATUS
{
	CHARSTATUS_NORMAL	= 0,
	CHARSTATUS_DELETED	= 1,
	CHARSTATUS_SIZE		= 2,
};

enum ACTIVE_SKILL_SLOTS
{
	SKILL_SLOT_00		= 0,
	SKILL_SLOT_01		= 1,
	SKILL_SLOT_02		= 2,
	SKILL_SLOT_03		= 3,
	SKILL_SLOT_04		= 4,
	SKILL_SLOT_05		= 5,
	SKILL_SLOT_06		= 6,
	SKILL_SLOT_07		= 7,
	SKILL_SLOT_08		= 8,
	SKILL_SLOT_09		= 9,
	SKILL_SLOT_10		= 10,
	SKILL_SLOT_11		= 11,
	SKILL_SLOT_12		= 12,
	SKILL_SLOT_13		= 13,
	SKILL_SLOT_14		= 14,
	SKILL_SLOT_15		= 15,
	SKILL_SLOT_16		= 16,
	SKILL_SLOT_17		= 17,
	SKILL_SLOT_18		= 18,
	SKILL_SLOT_19		= 19,
	SKILL_SLOT_20		= 20,
	SKILL_SLOT_21		= 21,
	SKILL_SLOT_22		= 22,
	SKILL_SLOT_23		= 23,
	SKILL_SLOT_24		= 24,
	SKILL_SLOT_25		= 25,
	SKILL_SLOT_26		= 26,
	SKILL_SLOT_27		= 27,
	SKILL_SLOT_28		= 28,
	SKILL_SLOT_29		= 29,
	SKILL_SLOT_30		= 30,
	SKILL_SLOT_31		= 31,
	SKILL_SLOT_32		= 32,
	SKILL_SLOT_33		= 33,
	SKILL_SLOT_34		= 34,
	SKILL_SLOT_35		= 35,
	SKILL_SLOT_36		= 36,
	SKILL_SLOT_37		= 37,
	SKILL_SLOT_38		= 38,
	SKILL_SLOT_39		= 39,
	SKILL_SLOT_NULL		= 40,
	SKILL_SLOT_SIZE		= 41,
};

enum ACTIVE_QUICK_SLOTS
{
	QUICK_SLOT_00		= 0,
	QUICK_SLOT_01		= 1,
	QUICK_SLOT_02		= 2,
	QUICK_SLOT_03		= 3,
	QUICK_SLOT_04		= 4,
	QUICK_SLOT_05		= 5,
	QUICK_SLOT_SIZE		= 6,
};

enum SLOTACT
{
	SLOTACT_NONE		= 0,
	SLOTACT_DRUG		= 1,
	SLOTACT_SIZE		= 2,
};

namespace RMComments
{
	extern std::string m_SlotAct[SLOTACT_SIZE];
	extern std::string m_QuickSlots[QUICK_SLOT_SIZE];
	extern std::string m_SkillSlots[SKILL_SLOT_SIZE];
	extern std::string m_SearchSkillType[SEARCHSKILL_SIZE];
	extern std::string m_CharStatus[CHARSTATUS_SIZE];
	extern std::string m_ClubRank[CLUBRANK_SIZE];
	extern std::string m_ClubStatus[CLUBSATUS_SIZE];
	extern std::string m_PageMain[MAINPAGE_SIZE];
	extern std::string m_PageChar[CHARPAGE_SIZE];
	extern std::string m_PageUser[USERPAGE_SIZE];
	extern std::string m_PageGuild[GUILDPAGE_SIZE];
	extern std::string m_PageVehicle[VEHICLEPAGE_SIZE];
	extern std::string m_PagePet[PETPAGE_SIZE];
	extern std::string m_UserType[USER_TYPE_SIZE];
	extern std::string m_SearchType[SEARCH_SIZE];
	extern std::string m_GenType[GEN_SIZE];
	extern std::string m_SearchItemType[SEARCH_ITEMSIZE];
	extern std::string m_SearchShopType[SEARCHSHOP_SIZE];
	extern std::string m_SearchChaType[SEARCH_CHASIZE];
	extern std::string m_SearchGuildType[SEARCH_GUILDSIZE];
	extern std::string m_SearchMapType[SEARCH_MAP_SIZE];
	extern std::string m_SearchFilterType[SEARCH_FILTER_SIZE];
	extern std::string m_SearchVehicleType[SEARCH_VEHICLESIZE];
	extern std::string m_SearchPetType[SEARCH_PETSIZE];
};